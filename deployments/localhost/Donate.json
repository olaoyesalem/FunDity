{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_campaignName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_i_owner",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "Donate__CallFailed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Donate__NotOwner",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_contract",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_desription",
          "type": "string"
        }
      ],
      "name": "Contract_Created",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_contract",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "Fund_Withdrawn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_contract",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "Funds_Donated",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "donate",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "getBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "getDonators",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_donor",
          "type": "address"
        }
      ],
      "name": "getDonorToAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x4109ad5659f843f2728a07b4266379a3b4f5e9ab4f9a509d21b26f73734e94a3",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "520309",
    "logsBloom": "0x
    "blockHash": "0xeb906a1f38bcc27d3d9963fc0509728460010823b3ab84e3d53b6116f8a1b6bb",
    "transactionHash": "0x4109ad5659f843f2728a07b4266379a3b4f5e9ab4f9a509d21b26f73734e94a3",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 2,
        "transactionHash": "0x4109ad5659f843f2728a07b4266379a3b4f5e9ab4f9a509d21b26f73734e94a3",
        "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
        "topics": [
          "0xb0c23c661f7a83f4f85f6009189862c40156b6a2676806c56313762b8ef05d21",
          "0x000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb92266",
          "0x000000000000000000000000e7f1725e7734ce288f8367e1bb143e90bb3f0512"
        ],
        "data": "0x000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000055065616365000000000000000000000000000000000000000000000000000000",
        "logIndex": 0,
        "blockHash": "0xeb906a1f38bcc27d3d9963fc0509728460010823b3ab84e3d53b6116f8a1b6bb"
      }
    ],
    "blockNumber": 2,
    "cumulativeGasUsed": "520309",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "Salem",
    "Peace",
    "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266"
  ],
  "numDeployments": 1,
  "solcInputHash": "cc8cf709a43f33485d730d0d2b6abaf9",
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_campaignName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_i_owner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Donate__CallFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Donate__NotOwner\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_contract\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_desription\",\"type\":\"string\"}],\"name\":\"Contract_Created\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_contract\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Fund_Withdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_contract\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Funds_Donated\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"donate\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getDonators\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_donor\",\"type\":\"address\"}],\"name\":\"getDonorToAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Olaoye Salem\",\"kind\":\"dev\",\"methods\":{\"withdraw(uint256)\":{\"details\":\"Only reciepient can withdraw funds from this contractall funds can be remooved anytime\"}},\"title\":\"Fund Me\",\"version\":1},\"userdoc\":{\"events\":{\"Contract_Created(address,address,string)\":{\"notice\":\"only fundraiser/recipient can perform action\"}},\"kind\":\"user\",\"methods\":{\"withdraw(uint256)\":{\"notice\":\"allows for withdrawing funds from contract\"}},\"notice\":\"A fundraising contract on the blockchain/ similar to GoFundMe\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Donate.sol\":\"Donate\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Donate.sol\":{\"content\":\"// SPDX-License-Identifier:MIT\\r\\npragma solidity ^0.8.7;\\r\\n\\r\\n\\r\\n// Add price converter to make the minimum paymentt $1\\r\\nerror DonateFactory__NameHasBeenTaken();\\r\\nerror DonateFactory__NotOwner();\\r\\nerror DonateFactory__NotEnoughEth();\\r\\nerror DonateFactory__FundBeforeCreatingCampaign();\\r\\nerror DonateFactory__CallFailed();\\r\\nerror Donate__CallFailed();\\r\\nerror Donate__NotOwner();\\r\\n/// @title Donate factory contract\\r\\n/// @author Olaoye Salem\\r\\n/// @notice A factory contract for the main FundMe contract\\r\\ncontract DonateFactory{\\r\\n\\r\\nstring [] private namesArray;\\r\\n  address[] private creatorList;\\r\\n  uint256 immutable private entryFee=10**16;\\r\\n    address [] private funders;  \\r\\n  address private immutable i_owner;\\r\\n  bytes32 [] private hashedAddressList;\\r\\n  mapping(string=>address)private nameToAddress;\\r\\n  mapping(address=>uint256) private addressToAmountFunded;\\r\\n  mapping(address=>address) private creatorToCampaignCreated;\\r\\n  mapping (string=> CreatorDetail) private campaignNameToCreatorDetail;\\r\\n  mapping (address=> CreatorDetail) private campaignAddressToCreatorDetail;\\r\\n  mapping (address=> CreatorDetail) private creatorToCreatorDetail;\\r\\n\\r\\n\\r\\nCreatorDetail []  private creatorDetail;\\r\\n  struct CreatorDetail{\\r\\n      address campaignAddress;\\r\\n      string campaignName;\\r\\n      address creator;\\r\\n      \\r\\n  }\\r\\n\\r\\n\\r\\n\\r\\n    modifier checkDuplicateName(string memory _addressName){\\r\\n       bytes32 addressName= keccak256(abi.encode(_addressName));\\r\\n       uint256 length = hashedAddressList.length;\\r\\n       for(uint256 i=0; i<length;++i){\\r\\n          if(addressName==hashedAddressList[i]){\\r\\n              revert DonateFactory__NameHasBeenTaken();\\r\\n          }\\r\\n           \\r\\n       }\\r\\n        _;\\r\\n    }\\r\\n  \\r\\n    modifier onlyOwner(){\\r\\n        if(msg.sender!=i_owner){\\r\\n            revert DonateFactory__NotOwner();\\r\\n        }\\r\\n    _;\\r\\n}\\r\\n\\r\\n\\r\\n    constructor(){\\r\\n    i_owner = msg.sender;\\r\\n}\\r\\n\\r\\n    ///@notice This function creates Donate by calling constructor of Donate\\r\\n    ///@param campaignName the firstname of the recipient\\r\\n    ///@param _description the need for the fundraising\\r\\n    // users must donate any amount before they can create a campaign\\r\\n\\r\\n\\r\\n    function createDonate (string memory campaignName, string memory _description )  checkDuplicateName(campaignName)  public payable {\\r\\n        if(msg.value<entryFee){\\r\\n            revert DonateFactory__NotEnoughEth();\\r\\n        }\\r\\n\\r\\n        namesArray.push(campaignName);\\r\\n       funders.push(msg.sender);\\r\\n        addressToAmountFunded[msg.sender]+=msg.value;\\r\\n      \\r\\n        bytes32 hashedString = keccak256(abi.encode(campaignName));\\r\\n        hashedAddressList.push(hashedString);\\r\\n\\r\\n        address newDonate = address(new Donate(campaignName,  _description,msg.sender));\\r\\n        creatorList.push(newDonate); \\r\\n        creatorDetail.push(CreatorDetail(newDonate,campaignName,msg.sender));\\r\\n        nameToAddress[campaignName]=newDonate;\\r\\n        creatorToCampaignCreated[msg.sender]=newDonate;\\r\\n        campaignNameToCreatorDetail[campaignName]=CreatorDetail(newDonate,campaignName,msg.sender);\\r\\n        campaignAddressToCreatorDetail[newDonate]=CreatorDetail(newDonate,campaignName,msg.sender);\\r\\n        creatorToCreatorDetail[msg.sender]=CreatorDetail(newDonate,campaignName,msg.sender);\\r\\n    }\\r\\n\\r\\n    function withdraw(uint256 _amount)public onlyOwner{\\r\\n      \\r\\n        (bool callSuccess, )=payable(msg.sender).call{value: _amount}(\\\"\\\");\\r\\n            if(!callSuccess){\\r\\n                revert DonateFactory__CallFailed();\\r\\n            }\\r\\n          \\r\\n    }\\r\\n\\r\\n    function searchByName( string memory _campaignName) public view returns(CreatorDetail memory){\\r\\n        return  campaignNameToCreatorDetail[_campaignName];  \\r\\n    }\\r\\n    function serachByCampaignAddress(address _campaignAddress)public view returns (CreatorDetail memory){\\r\\n        return campaignAddressToCreatorDetail[_campaignAddress];\\r\\n    }\\r\\n    function searchByCreator(address _creator) public view returns (CreatorDetail memory){\\r\\n        return creatorToCreatorDetail[_creator];\\r\\n    }\\r\\n    \\r\\n\\r\\n\\r\\n    function balance() public view returns(uint256){\\r\\n        uint256 _balance = address(this).balance;\\r\\n        return _balance;\\r\\n    }\\r\\n\\r\\n    function getCampaignAddress(uint256 _index) public view returns(address){\\r\\n        return creatorList[_index];\\r\\n\\r\\n    }\\r\\n    function getCreatorDetails(uint256 _index) public view returns(CreatorDetail memory){\\r\\n        return creatorDetail[_index];\\r\\n    }\\r\\n    function getNameToAddress(string calldata campaignName) public view returns(address){\\r\\n        return nameToAddress[campaignName];\\r\\n    }\\r\\n    function getAddressToAmountFunded(address _address) public view returns(uint256){\\r\\n        return addressToAmountFunded[_address];\\r\\n    }\\r\\n    function getCreatorToCampaignCreated(address _address) public view returns(address){\\r\\n        return creatorToCampaignCreated[_address];\\r\\n    }\\r\\n  \\r\\n    function nameToCreatorDetail(string memory _name) public view returns(CreatorDetail memory){\\r\\n        return campaignNameToCreatorDetail[_name];\\r\\n    }\\r\\n    function AddressToCreatorDetail(address _address) public view returns(CreatorDetail memory){\\r\\n        return campaignAddressToCreatorDetail[_address];\\r\\n    }\\r\\n\\r\\n    function getCreatorToCreatorDetail(address _creator) public view returns(CreatorDetail memory){\\r\\n        return creatorToCreatorDetail[_creator];\\r\\n    }\\r\\n\\r\\n    function getEntranceFee() public pure returns(uint256){\\r\\n        return entryFee;\\r\\n    }\\r\\n    function getCreatorList(uint256 _index) public view returns(address){\\r\\n      return  creatorList[_index];\\r\\n    }\\r\\n\\r\\n    function getFundersList(uint256 _index) public view returns(address){\\r\\n        return funders[_index];\\r\\n    }\\r\\n    function getHashedName(string memory _name) public view returns(bytes memory){\\r\\n        bytes32 hashedString = keccak256(abi.encode(_name));\\r\\n        \\r\\n    }\\r\\n    function getHashedAddressList(uint256 _index) public view returns(bytes32 ){\\r\\n       return hashedAddressList[_index];\\r\\n    }\\r\\n    function getHashedAddressListLength() public view returns(uint256 ){\\r\\n        return hashedAddressList.length;\\r\\n    }\\r\\n    function getNamesArray(uint _index) public view returns(string memory){\\r\\n        return namesArray[_index];\\r\\n    }\\r\\n   \\r\\n\\r\\n     receive() external payable{\\r\\n       \\r\\n    }\\r\\n    fallback() external payable{\\r\\n     \\r\\n\\r\\n}\\r\\n\\r\\n    }  \\r\\n\\r\\n    \\r\\n\\r\\n///@title Fund Me\\r\\n///@author Olaoye Salem\\r\\n///@notice A fundraising contract on the blockchain/ similar to GoFundMe\\r\\ncontract Donate{\\r\\n       bytes32 [] private hashedAddressList;\\r\\n       mapping (address=>uint256) private donorsAmount;\\r\\n       address [] private donators;\\r\\n       address  i_owner;\\r\\n       \\r\\n\\r\\n\\r\\n         ///@notice only fundraiser/recipient can perform action\\r\\n\\r\\n          //EVENTS\\r\\n    //event for when a contract is created. Shows owner address, contract address and description of fundraiser\\r\\n    event Contract_Created(address indexed _from, address indexed _contract, string _desription );\\r\\n    // event for when money is donated. Shows address of donor, fundraiser contract donated to and value donated\\r\\n    event Funds_Donated(address indexed _from, address indexed _contract, uint _value);\\r\\n       \\r\\n    //event for when recipient withdraws money from the fundraiser contract. shows the owner address, contract address and amount withdrawn\\r\\n    event Fund_Withdrawn(address indexed _from, address indexed _contract, uint _value);\\r\\n\\r\\n   modifier onlyOwner(){\\r\\n        if(msg.sender!=i_owner){\\r\\n            revert Donate__NotOwner();\\r\\n        }\\r\\n    _;\\r\\n}\\r\\n\\r\\n  string private description;\\r\\n    //Campaign name of reciepient\\r\\n    string private campaignName;\\r\\n    //number of donors in the fundraiser\\r\\n    \\r\\n\\r\\n       constructor(string memory _campaignName, string memory _description, address _i_owner) {\\r\\n        i_owner = _i_owner;\\r\\n        campaignName = _campaignName;\\r\\n        description = _description;\\r\\n\\r\\n     \\r\\n        \\r\\n     emit Contract_Created(i_owner, address(this), description);\\r\\n    }\\r\\n\\r\\n\\r\\n    function donate() public  payable{  \\r\\n        donators.push(msg.sender); \\r\\n        donorsAmount[msg.sender] = msg.value; //keeps track of the amount that each donor contributes;  \\r\\n     emit Funds_Donated(msg.sender,address(this), msg.value);//sends out event that funds has been donated to this fundraiser contract\\r\\n    }\\r\\n\\r\\n\\r\\n    \\r\\n    ///@notice allows for withdrawing funds from contract\\r\\n    ///@dev Only reciepient can withdraw funds from this contract\\r\\n    ///@dev all funds can be remooved anytime\\r\\n    function withdraw(uint256 _amount) public onlyOwner {//removed onlyOwner\\r\\n        //balance stores the amount of money in the contract at this moment\\r\\n        uint balance = _amount;\\r\\n      emit Fund_Withdrawn(i_owner,address(this),balance);//sends out event that contract owner/recipient have withdrew some funds\\r\\n       \\r\\n          (bool callSuccess, )=payable(msg.sender).call{value: balance}(\\\"\\\");\\r\\n          if(!callSuccess){\\r\\n              revert Donate__CallFailed();\\r\\n          }\\r\\n           \\r\\n    }\\r\\n\\r\\n    function getBalance(address _address) public view returns(uint256){\\r\\n        uint256 balance = address(_address).balance;\\r\\n        return balance;\\r\\n    }\\r\\n    function getDonators(uint256 _index) public view returns(address){\\r\\n        return donators[_index];\\r\\n    }\\r\\n    function getDonorToAmount(address _donor) public view returns(uint256){\\r\\n        return donorsAmount[_donor];\\r\\n    }\\r\\n    \\r\\n\\r\\n   receive() external payable{\\r\\n        donate();\\r\\n    }\\r\\n    fallback()external payable{\\r\\n        donate();\\r\\n    }\\r\\n\\r\\n}\\r\\n//720132\\r\\n//691392\\r\\n//625350\",\"keccak256\":\"0x16c9f831d35cbc68329e49f18751cbdb984bf372e8da14aa3aeb9ba6e4b0c861\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162000c9738038062000c97833981810160405281019062000037919062000282565b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508260059080519060200190620000909291906200013d565b508160049080519060200190620000a99291906200013d565b503073ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fb0c23c661f7a83f4f85f6009189862c40156b6a2676806c56313762b8ef05d2160046040516200012c9190620003a8565b60405180910390a3505050620005c4565b8280546200014b90620004bb565b90600052602060002090601f0160209004810192826200016f5760008555620001bb565b82601f106200018a57805160ff1916838001178555620001bb565b82800160010185558215620001bb579182015b82811115620001ba5782518255916020019190600101906200019d565b5b509050620001ca9190620001ce565b5090565b5b80821115620001e9576000816000905550600101620001cf565b5090565b600062000204620001fe84620003f5565b620003cc565b9050828152602081018484840111156200022357620002226200058a565b5b6200023084828562000485565b509392505050565b6000815190506200024981620005aa565b92915050565b600082601f83011262000267576200026662000585565b5b815162000279848260208601620001ed565b91505092915050565b6000806000606084860312156200029e576200029d62000594565b5b600084015167ffffffffffffffff811115620002bf57620002be6200058f565b5b620002cd868287016200024f565b935050602084015167ffffffffffffffff811115620002f157620002f06200058f565b5b620002ff868287016200024f565b9250506040620003128682870162000238565b9150509250925092565b600081546200032b81620004bb565b62000337818662000440565b9450600182166000811462000355576001811462000368576200039f565b60ff19831686526020860193506200039f565b62000373856200042b565b60005b83811015620003975781548189015260018201915060208101905062000376565b808801955050505b50505092915050565b60006020820190508181036000830152620003c481846200031c565b905092915050565b6000620003d8620003eb565b9050620003e68282620004f1565b919050565b6000604051905090565b600067ffffffffffffffff82111562000413576200041262000556565b5b6200041e8262000599565b9050602081019050919050565b60008190508160005260206000209050919050565b600082825260208201905092915050565b60006200045e8262000465565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60005b83811015620004a557808201518184015260208101905062000488565b83811115620004b5576000848401525b50505050565b60006002820490506001821680620004d457607f821691505b60208210811415620004eb57620004ea62000527565b5b50919050565b620004fc8262000599565b810181811067ffffffffffffffff821117156200051e576200051d62000556565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b620005b58162000451565b8114620005c157600080fd5b50565b6106c380620005d46000396000f3fe60806040526004361061004e5760003560e01c80630fa91fa9146100675780632e1a7d4d146100a45780633e05f0f5146100cd578063ed88c68e1461010a578063f8b2cb4f146101145761005d565b3661005d5761005b610151565b005b610065610151565b005b34801561007357600080fd5b5061008e60048036038101906100899190610528565b61025f565b60405161009b91906105ab565b60405180910390f35b3480156100b057600080fd5b506100cb60048036038101906100c69190610528565b6102a7565b005b3480156100d957600080fd5b506100f460048036038101906100ef91906104fb565b610462565b60405161010191906105c6565b60405180910390f35b610112610151565b005b34801561012057600080fd5b5061013b600480360381019061013691906104fb565b6104ab565b60405161014891906105c6565b60405180910390f35b6002339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f702ce8e2a7e3a8bc7ba50d9187386c652637c1e0a97f4c8ad4c2481e1ae0861a3460405161025591906105c6565b60405180910390a3565b60006002828154811061027557610274610628565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461032e576040517fe0e48fa400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008190503073ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f60a3bf8490aa32c80db056237a7c8321c0a03596ab5a9dffe3f32151b7254fb7836040516103b291906105c6565b60405180910390a360003373ffffffffffffffffffffffffffffffffffffffff16826040516103e090610596565b60006040518083038185875af1925050503d806000811461041d576040519150601f19603f3d011682016040523d82523d6000602084013e610422565b606091505b505090508061045d576040517faaf2e54b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000808273ffffffffffffffffffffffffffffffffffffffff1631905080915050919050565b6000813590506104e08161065f565b92915050565b6000813590506104f581610676565b92915050565b60006020828403121561051157610510610657565b5b600061051f848285016104d1565b91505092915050565b60006020828403121561053e5761053d610657565b5b600061054c848285016104e6565b91505092915050565b61055e816105ec565b82525050565b60006105716000836105e1565b915061057c8261065c565b600082019050919050565b6105908161061e565b82525050565b60006105a182610564565b9150819050919050565b60006020820190506105c06000830184610555565b92915050565b60006020820190506105db6000830184610587565b92915050565b600081905092915050565b60006105f7826105fe565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b50565b610668816105ec565b811461067357600080fd5b50565b61067f8161061e565b811461068a57600080fd5b5056fea264697066735822122079ee3edd90c387462b15042e5f3201380d94e9c1c6d004605177f0f07edc587064736f6c63430008070033",
  "deployedBytecode": "0x60806040526004361061004e5760003560e01c80630fa91fa9146100675780632e1a7d4d146100a45780633e05f0f5146100cd578063ed88c68e1461010a578063f8b2cb4f146101145761005d565b3661005d5761005b610151565b005b610065610151565b005b34801561007357600080fd5b5061008e60048036038101906100899190610528565b61025f565b60405161009b91906105ab565b60405180910390f35b3480156100b057600080fd5b506100cb60048036038101906100c69190610528565b6102a7565b005b3480156100d957600080fd5b506100f460048036038101906100ef91906104fb565b610462565b60405161010191906105c6565b60405180910390f35b610112610151565b005b34801561012057600080fd5b5061013b600480360381019061013691906104fb565b6104ab565b60405161014891906105c6565b60405180910390f35b6002339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f702ce8e2a7e3a8bc7ba50d9187386c652637c1e0a97f4c8ad4c2481e1ae0861a3460405161025591906105c6565b60405180910390a3565b60006002828154811061027557610274610628565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461032e576040517fe0e48fa400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008190503073ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f60a3bf8490aa32c80db056237a7c8321c0a03596ab5a9dffe3f32151b7254fb7836040516103b291906105c6565b60405180910390a360003373ffffffffffffffffffffffffffffffffffffffff16826040516103e090610596565b60006040518083038185875af1925050503d806000811461041d576040519150601f19603f3d011682016040523d82523d6000602084013e610422565b606091505b505090508061045d576040517faaf2e54b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000808273ffffffffffffffffffffffffffffffffffffffff1631905080915050919050565b6000813590506104e08161065f565b92915050565b6000813590506104f581610676565b92915050565b60006020828403121561051157610510610657565b5b600061051f848285016104d1565b91505092915050565b60006020828403121561053e5761053d610657565b5b600061054c848285016104e6565b91505092915050565b61055e816105ec565b82525050565b60006105716000836105e1565b915061057c8261065c565b600082019050919050565b6105908161061e565b82525050565b60006105a182610564565b9150819050919050565b60006020820190506105c06000830184610555565b92915050565b60006020820190506105db6000830184610587565b92915050565b600081905092915050565b60006105f7826105fe565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b50565b610668816105ec565b811461067357600080fd5b50565b61067f8161061e565b811461068a57600080fd5b5056fea264697066735822122079ee3edd90c387462b15042e5f3201380d94e9c1c6d004605177f0f07edc587064736f6c63430008070033",
  "devdoc": {
    "author": "Olaoye Salem",
    "kind": "dev",
    "methods": {
      "withdraw(uint256)": {
        "details": "Only reciepient can withdraw funds from this contractall funds can be remooved anytime"
      }
    },
    "title": "Fund Me",
    "version": 1
  },
  "userdoc": {
    "events": {
      "Contract_Created(address,address,string)": {
        "notice": "only fundraiser/recipient can perform action"
      }
    },
    "kind": "user",
    "methods": {
      "withdraw(uint256)": {
        "notice": "allows for withdrawing funds from contract"
      }
    },
    "notice": "A fundraising contract on the blockchain/ similar to GoFundMe",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 550,
        "contract": "contracts/Donate.sol:Donate",
        "label": "hashedAddressList",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_bytes32)dyn_storage"
      },
      {
        "astId": 554,
        "contract": "contracts/Donate.sol:Donate",
        "label": "donorsAmount",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 557,
        "contract": "contracts/Donate.sol:Donate",
        "label": "donators",
        "offset": 0,
        "slot": "2",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 559,
        "contract": "contracts/Donate.sol:Donate",
        "label": "i_owner",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      },
      {
        "astId": 599,
        "contract": "contracts/Donate.sol:Donate",
        "label": "description",
        "offset": 0,
        "slot": "4",
        "type": "t_string_storage"
      },
      {
        "astId": 601,
        "contract": "contracts/Donate.sol:Donate",
        "label": "campaignName",
        "offset": 0,
        "slot": "5",
        "type": "t_string_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_bytes32)dyn_storage": {
        "base": "t_bytes32",
        "encoding": "dynamic_array",
        "label": "bytes32[]",
        "numberOfBytes": "32"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}